basePath: /
definitions:
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      lyrics:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - song
    type: object
  service.SongDetail:
    properties:
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        type: string
      releaseDate:
        example: 16.07.2006
        type: string
      text:
        example: |-
          Ooh baby, don't you know I suffer?
          Ooh baby, can you hear me moan?
          You caught me under false pretenses
          How long before you let me go?

          Ooh
          You set my soul alight
          Ooh
          You set my soul alight
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API for managing songs
  title: Music Info
  version: 0.0.1
paths:
  /info:
    get:
      description: Get song details
      parameters:
      - description: Group name
        in: query
        name: group
        required: true
        type: string
      - description: Song name
        in: query
        name: song
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ok
          schema:
            $ref: '#/definitions/service.SongDetail'
        "400":
          description: Bad request
        "500":
          description: Internal server error
      summary: Get song info
      tags:
      - info
  /songs/:
    get:
      consumes:
      - application/json
      description: Get a list of all songs with optional filtering
      parameters:
      - description: Filter by group_name, song or lyrics
        in: query
        name: filter
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of results per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all songs
      tags:
      - songs
    post:
      consumes:
      - application/json
      description: Add a new song to the database
      parameters:
      - description: Song JSON
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new song
      tags:
      - songs
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Remove a song from the database by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Song deleted successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to delete song
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a song
      tags:
      - songs
    put:
      consumes:
      - application/json
      description: Update details of an existing song by its ID
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/models.Song'
      produces:
      - application/json
      responses:
        "200":
          description: Song updated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to update song
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a song
      tags:
      - songs
  /songs/{id}/text:
    get:
      consumes:
      - application/json
      description: Get the lyrics of a song by its ID with optional pagination
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of verses per page (default: 5)'
        in: query
        name: limit
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: Song text
          schema:
            type: string
        "400":
          description: Invalid song ID or page number
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to get song text
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song text
      tags:
      - songs
swagger: "2.0"
